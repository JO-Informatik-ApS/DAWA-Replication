//-----------------------------------------------------------------------------------------------
// This is auto-generated code.
//-----------------------------------------------------------------------------------------------
// This code was generated by JO Informatik DAWA Replication tool version 1.0.2.0
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//-----------------------------------------------------------------------------------------------
using Microsoft.SqlServer.Types;
using Newtonsoft.Json;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace JOInformatik.DawaReplication.DataAccess
{
    /// <summary>TODO.</summary>
    [GeneratedCode("JO Informatik DAWA Replication tool", "version 1.0.2.0")]
    [Table("jordstykke")]
    public partial class Jordstykke : ReplicationBase
    {
        /// <summary>This constructor calls OnCreated().</summary>
        public Jordstykke()
        {
            EntityUpdated = DateTime.Now;
            OnCreated();
        }

        /// <summary>
        /// DETTE ER EN DEL AF PKEY. Unik identifikation af det matrikulære ”ejerlav”. Repræsenteret ved indtil 7 cifre. Eksempel: ”170354” for ejerlavet ”Eskebjerg By, Bregninge”.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None), Column("ejerlavkode", Order = 0)]
        [Required()]
        public virtual int Ejerlavkode { get; set; }

        /// <summary>
        /// DETTE ER EN DEL AF PKEY. Unik identifikation af jordstykket indenfor ejerlavet. Består af bogstaver og tal.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None), Column("matrikelnr", Order = 1, TypeName = "varchar(10)")]
        [Required()]
        public virtual string Matrikelnr { get; set; }

        /// <summary>
        /// Kommunekoden. 4 cifre.
        /// </summary>
        
        [Column("kommunekode", TypeName = "varchar(4)")]
        [Required()]
        public virtual string Kommunekode { get; set; }

        /// <summary>
        /// Regionskoden. 4 cifre.
        /// </summary>
        
        [Column("regionskode", TypeName = "varchar(4)")]
        [Required()]
        public virtual string Regionskode { get; set; }

        /// <summary>
        /// Sognekoden. 4 cifre.
        /// </summary>
        
        [Column("sognekode", TypeName = "varchar(4)")]
        [Required()]
        public virtual string Sognekode { get; set; }

        /// <summary>
        /// Retskredskoden. 4 cifre.
        /// </summary>
        
        [Column("retskredskode", TypeName = "varchar(4)")]
        [Required()]
        public virtual string Retskredskode { get; set; }

        /// <summary>
        /// Identifikation af den vurderingsejendom jf. Ejendomsstamregisteret, ESR, som jordstykket er en del af. Repræsenteret ved 7 cifre. Eksempel ”0035512”.
        /// </summary>
        
        [Column("esrejendomsnr", TypeName = "varchar(7)")]
        public virtual string Esrejendomsnr { get; set; }

        /// <summary>
        /// Identifikation af den vurderingsejendom jf. Ejendomsstamregisteret, ESR, som jordstykket er en del af. Repræsenteret ved 10 cifre, hvor de første 3 cifre er kommunekoden hvor ejerskabet er placeret. Eksempel ”6070035512”.
        /// </summary>
        
        [Column("udvidet_esrejendomsnr", TypeName = "varchar(10)")]
        public virtual string Udvidet_esrejendomsnr { get; set; }

        /// <summary>
        /// SFE ejendomsnummer.
        /// </summary>
        
        [Column("sfeejendomsnr", TypeName = "varchar(20)")]
        public virtual string Sfeejendomsnr { get; set; }

        /// <summary>
        /// BFE Nummer.
        /// </summary>
        
        [Column("bfenummer")]
        public virtual int? Bfenummer { get; set; }

        /// <summary>
        /// Jordstykkets geometri. Leveres som GeoJSON polygon.
        /// </summary>
        
        [Column("geometri")]
        [Required()]
        [JsonConverter(typeof(SqlGeometryConverter))]
        public virtual SqlGeometry Geometri { get; set; }

        /// <summary>
        /// Jordstykkets featureid, en unik identifikator som anvendes i matrikelkortet.
        /// </summary>
        
        [Column("featureid", TypeName = "varchar(20)")]
        [Required()]
        public virtual string Featureid { get; set; }

        /// <summary>
        /// angivelse om jordstykket indgår i flere faste ejendomme.
        /// </summary>
        
        [Column("fælleslod")]
        [Required()]
        public virtual bool Fælleslod { get; set; }

        /// <summary>
        /// featureid for det jordstykke som jordstykket er udstykket fra.
        /// </summary>
        
        [Column("moderjordstykke")]
        public virtual int? Moderjordstykke { get; set; }

        /// <summary>
        /// det i matriklen registrerede sande areal på jordstykket – ikke nødvendigvis identisk med det geometriske areal - angivet som heltal i kvadratmeter
        /// </summary>
        
        [Column("registreretareal")]
        [Required()]
        public virtual int Registreretareal { get; set; }

        /// <summary>
        /// angivelse af beregningsmåden for det registrerede areal for jordstykket – følgende koder benyttes:
        /// <ul>
        /// <li>o – arealet er beregnet efter opmåling</li>
        /// <li>s – arealet er beregnet efter konstruktion i større målforhold, dvs. større end det analoge matrikelkort</li>
        /// <li>k – arealet er beregnet på grundlag af kort</li></ul>
        /// </summary>
        
        [Column("arealberegningsmetode", TypeName = "varchar(1)")]
        [Required()]
        public virtual string Arealberegningsmetode { get; set; }

        /// <summary>
        /// det i matriklen registrerede sande areal af vejudlæg på jordstykket angivet som heltal i kvadratmeter
        /// </summary>
        
        [Column("vejareal")]
        [Required()]
        public virtual int Vejareal { get; set; }

        /// <summary>
        /// angivelse af beregningsmåden for det registrerede areal af vej på jordstykket – følgende koder benyttes:
        /// <ul>
        /// <li>b – vejareal på jordstykket er beregnet (og kan være 0)</li>
        /// <li>e – der er konstateret vej på jordstykket, men areal er ikke beregnet</li>
        /// <li>u – det er ukendt, om der findes vej på jordstykket</li>
        /// </ul>
        /// </summary>
        
        [Column("vejarealberegningsmetode", TypeName = "varchar(1)")]
        [Required()]
        public virtual string Vejarealberegningsmetode { get; set; }

        /// <summary>
        /// 
        /// angivelse af beregningsmåden for det registrerede areal af vand på jordstykket – følgende koder benyttes:
        /// <ul>
        /// <li> incl – vandareal på jordstykket et inkluderet i det registrerede areal for jordstykket</li>
        /// <li> excl – vandareal på jordstykket er ikke inkluderet i det registrerede areal for jordstykket</li>
        /// <li>ukendt – vandareal er ikke oplyst</li> 
        /// </ul>
        /// </summary>
        
        [Column("vandarealberegningsmetode", TypeName = "varchar(6)")]
        [Required()]
        public virtual string Vandarealberegningsmetode { get; set; }

        /// <summary>
        /// Jordstykkets visuelle center.
        /// </summary>
        
        [Column("visueltcenter")]
        [Required()]
        [JsonConverter(typeof(SqlGeometryConverter))]
        public virtual SqlGeometry Visueltcenter { get; set; }

        /// <summary>
        /// Bounding box for jordstykkets geometri.
        /// </summary>
        
        [Column("bbox")]
        [JsonConverter(typeof(SqlGeometryConverter))]
        public virtual SqlGeometry Bbox { get; set; }

        /// <summary>Overwrite this method to do your own initialization of the entity.</summary>
        partial void OnCreated();

        /// Returns the primary key as a string (includes all columns).</summary>
        public override string DawaPkey
        {
            get
            {
                if (_dawaPkey == null)
                {
                    _dawaPkey = Ejerlavkode.ToString() + "_" + Matrikelnr.ToString();
                }
                return _dawaPkey;
            }
        }

        [Column("entity_updated")]
        [Required()]
        /// <summary>Tidspunktet da rækken blev oprettet eller ændret i databasen hos JOI.</summary>
        public DateTime EntityUpdated { get; set; }

    }
}
