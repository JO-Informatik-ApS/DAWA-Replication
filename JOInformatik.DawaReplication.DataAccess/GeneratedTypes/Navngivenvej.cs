//-----------------------------------------------------------------------------------------------
// This is auto-generated code.
//-----------------------------------------------------------------------------------------------
// This code was generated by JO Informatik DAWA Replication tool version 1.0.2.0
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//-----------------------------------------------------------------------------------------------
using Microsoft.SqlServer.Types;
using Newtonsoft.Json;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace JOInformatik.DawaReplication.DataAccess
{
    /// <summary>TODO.</summary>
    [GeneratedCode("JO Informatik DAWA Replication tool", "version 1.0.2.0")]
    [Table("navngivenvej")]
    public partial class Navngivenvej : ReplicationBase
    {
        /// <summary>This constructor calls OnCreated().</summary>
        public Navngivenvej()
        {
            EntityUpdated = DateTime.Now;
            OnCreated();
        }

        /// <summary>
        /// DETTE ER PKEY. Den navngivne vejs unikke ID
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None), Column("id")]
        [Required()]
        public virtual Guid Id { get; set; }

        /// <summary>
        /// Den navngivne vejs status i DAR.
        /// </summary>
        
        [Column("darstatus", TypeName = "varchar(9)")]
        [Required()]
        public virtual string Darstatus { get; set; }

        /// <summary>
        /// Dato og tid for vejens oprettelse i DAR. Eksempel: 2001-12-23T00:00:00.
        /// </summary>
        
        [Column("oprettet")]
        [Required()]
        public virtual DateTime Oprettet { get; set; }

        /// <summary>
        /// Dato og tid for seneste ændring af vejen i DAR. Eksempel: 2002-04-08T00:00:00.
        /// </summary>
        
        [Column("ændret")]
        [Required()]
        public virtual DateTime Ændret { get; set; }

        /// <summary>
        /// Vejens navn. Repræsenteret ved indtil 40 tegn. Eksempel: ”Hvidkildevej”.
        /// </summary>
        
        [Column("navn", TypeName = "varchar(40)")]
        [Required()]
        public virtual string Navn { get; set; }

        /// <summary>
        /// En evt. forkortet udgave af vejnavnet på højst 20 tegn, som bruges ved adressering på labels og rudekuverter og lign., hvor der ikke plads til det fulde vejnavn.
        /// </summary>
        
        [Column("adresseringsnavn", TypeName = "varchar(20)")]
        public virtual string Adresseringsnavn { get; set; }

        /// <summary>
        /// Kommunekoden for den kommune, som administrerer den navngivne vej.
        /// </summary>
        
        [Column("administrerendekommune", TypeName = "varchar(4)")]
        public virtual string Administrerendekommune { get; set; }

        /// <summary>
        /// En beskrivelse af den navngivne vej
        /// </summary>
        
        [Column("beskrivelse", TypeName = "varchar(1000)")]
        public virtual string Beskrivelse { get; set; }

        /// <summary>
        /// Styrelsen for Dataforsyning og Effektivisering har fem hverdage til at kontrollere retskrivningen af et nyt vejnavn. retskrivningskontrol angiver hvor i processen vejnavnet er. retskrivningskontrol kan antage følgende værdier: Udløbet, Afvist, Godkendt og Ikke Kontrolleret.
        /// </summary>
        
        [Column("retskrivningskontrol", TypeName = "varchar(40)")]
        public virtual string Retskrivningskontrol { get; set; }

        /// <summary>
        /// Vejnavnet skrevet fuldt ud, således som det udtales. Udtaltvejnavn anvendes
        ///  for at gøre det nemmere at finde frem til et bestemt vejnavn, også i de tilfælde hvor der
        ///   ingår forkortelser som ikke udtales som sådanne fx som Gl. Kongevej, der udtales Gammel
        ///    Kongevej.
        /// </summary>
        
        [Column("udtaltvejnavn", TypeName = "varchar(80)")]
        public virtual string Udtaltvejnavn { get; set; }

        /// <summary>
        /// Kode som angiver hvilken part eller system, der er kilde til stedfæstelsen. Kilde er en kodeliste som klassificerer de forskellige typer af kilder til stedfæstelsen. fx med værdierne GeoDKgrundkort, Matrikelkort, Ekstern indberetning, Ejer/administrator/Lsp, Adressemyndigheden.
        /// </summary>
        
        [Column("beliggenhed_oprindelse_kilde", TypeName = "varchar(20)")]
        public virtual string Beliggenhed_oprindelse_kilde { get; set; }

        /// <summary>
        /// Nøjagtighedsklasse: A: Manuelt sat, følger ikke GeoDanmark. B: Maskinelt sat, ud fra GeoDanmark. C: Manuelt sat, kommer til at følge GeoDanmark.
        /// </summary>
        
        [Column("beliggenhed_oprindelse_nøjagtighedsklasse", TypeName = "varchar(1)")]
        public virtual string Beliggenhed_oprindelse_nøjagtighedsklasse { get; set; }

        /// <summary>
        /// Tidsstempel som angiver seneste opdatering af stedfæstelsen i DAR.
        /// Registreringstidspunktet angiver hvornår den pågældende stedfæstelse senest er ajourført. Oplysningen giver brugerne mulighed for at vurdere om stedfæstelsen er opdateret i forhold til andre relevante objekter.
        /// </summary>
        
        [Column("beliggenhed_oprindelse_registrering")]
        public virtual DateTime? Beliggenhed_oprindelse_registrering { get; set; }

        /// <summary>
        /// Kode som angiver den tekniske standard, der er anvendt ved stedfæstelsen.
        /// N0: Vejnavnebeliggenheden kan være et vejnavneområde, som omslutter vejens adresser, eller en vejmidte som kommer fra GeoDanmark eller er konstrueret i DAR.
        /// </summary>
        
        [Column("beliggenhed_oprindelse_tekniskstandard", TypeName = "varchar(20)")]
        public virtual string Beliggenhed_oprindelse_tekniskstandard { get; set; }

        /// <summary>Overwrite this method to do your own initialization of the entity.</summary>
        partial void OnCreated();

        /// Returns the primary key as a string (includes all columns).</summary>
        public override string DawaPkey
        {
            get
            {
                if (_dawaPkey == null)
                {
                    _dawaPkey = Id.ToString();
                }
                return _dawaPkey;
            }
        }

        [Column("entity_updated")]
        [Required()]
        /// <summary>Tidspunktet da rækken blev oprettet eller ændret i databasen hos JOI.</summary>
        public DateTime EntityUpdated { get; set; }

    }
}
