//-----------------------------------------------------------------------------------------------
// This is auto-generated code.
//-----------------------------------------------------------------------------------------------
// This code was generated by JO Informatik DAWA Replication tool version 1.0.2.0
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//-----------------------------------------------------------------------------------------------
using Microsoft.SqlServer.Types;
using Newtonsoft.Json;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace JOInformatik.DawaReplication.DataAccess
{
    /// <summary>TODO.</summary>
    [GeneratedCode("JO Informatik DAWA Replication tool", "version 1.0.2.0")]
    [Table("adgangsadresse")]
    public partial class Adgangsadresse : ReplicationBase
    {
        /// <summary>This constructor calls OnCreated().</summary>
        public Adgangsadresse()
        {
            EntityUpdated = DateTime.Now;
            OnCreated();
        }

        /// <summary>
        /// DETTE ER PKEY. Universel, unik identifikation af adressen af datatypen UUID. Er stabil over hele adressens levetid (ligesom et CPR-nummer) dvs. uanset om adressen evt. ændrer vejnavn, husnummer, postnummer eller kommunekode. Repræsenteret som 32 hexadecimale tegn. Eksempel: ”0a3f507a-93e7-32b8-e044-0003ba298018”.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None), Column("id")]
        [Required()]
        public virtual Guid Id { get; set; }

        /// <summary>
        /// Adgangsadressens status. Heltal. Mulige værdier er 1: gældende, 2: nedlagt, 3: foreløbig, 4: henlagt.
        /// </summary>
        
        [Column("status")]
        [Required()]
        public virtual int Status { get; set; }

        /// <summary>
        /// Dato og tid for adgangsadressens oprettelse, som registreret i DAR. Eksempel: 2001-12-23T00:00:00.
        /// </summary>
        
        [Column("oprettet")]
        public virtual DateTime? Oprettet { get; set; }

        /// <summary>
        /// Dato og tid hvor der sidst er ændret i adgangsadressen, som registreret i DAR. Eksempel: 2002-04-08T00:00:00.
        /// </summary>
        
        [Column("ændret")]
        public virtual DateTime? Ændret { get; set; }

        /// <summary>
        /// Adgangsadressens ikrafttrædelsesdato, dvs. det tidspunkt hvor adressen første gang fik status "gældende". Kan være fremtidig.
        /// </summary>
        
        [Column("ikrafttrædelsesdato")]
        public virtual DateTime? Ikrafttrædelsesdato { get; set; }

        /// <summary>
        /// Kommunekoden. 4 cifre.
        /// </summary>
        
        [Column("kommunekode", TypeName = "varchar(4)")]
        public virtual string Kommunekode { get; set; }

        /// <summary>
        /// Identifikation af vejstykket, adgangsadressen befinder sig på. Er unikt indenfor den pågældende kommune. Repræsenteret ved fire cifre. Eksempel: I Københavns kommune er ”0004” lig ”Abel Cathrines Gade”.
        /// </summary>
        
        [Column("vejkode", TypeName = "varchar(4)")]
        public virtual string Vejkode { get; set; }

        /// <summary>
        /// Husnummer der identificerer den pågældende adresse i forhold til andre adresser med samme vejnavn. Husnummeret består af et tal 1-999 evt. suppleret af et stort bogstav A..Z, og fastsættes i stigende orden, normalt med lige og ulige numre på hver side af vejen. Eksempel: "11", "12A", "187B".
        /// </summary>
        
        [Column("husnr", TypeName = "varchar(4)")]
        public virtual string Husnr { get; set; }

        /// <summary>
        /// Et supplerende bynavn – typisk landsbyens navn – eller andet lokalt stednavn, der er fastsat af kommunen for at præcisere adressens beliggenhed indenfor postnummeret. Indgår som en del af den officielle adressebetegnelse. Indtil 34 tegn. Eksempel: ”Sønderholm”.
        /// </summary>
        
        [Column("supplerendebynavn", TypeName = "varchar(40)")]
        public virtual string Supplerendebynavn { get; set; }

        /// <summary>
        /// Postnummeret som adressen er beliggende i.
        /// </summary>
        
        [Column("postnr", TypeName = "varchar(4)")]
        public virtual string Postnr { get; set; }

        /// <summary>
        /// Ejerlavkode for det jordstykke, som adressen er placeret på. Repræsenteret ved indtil 7 cifre. Eksempel: ”170354” for ejerlavet ”Eskebjerg By, Bregninge”.
        /// </summary>
        
        [Column("ejerlavkode")]
        public virtual int? Ejerlavkode { get; set; }

        /// <summary>
        /// Matrikelnummer for det jordstykke, som adressen er placeret på. Repræsenteret ved Indtil 7 tegn: max. 4 cifre + max. 3 små bogstaver. Eksempel: ”18b”.
        /// </summary>
        
        [Column("matrikelnr", TypeName = "varchar(10)")]
        public virtual string Matrikelnr { get; set; }

        /// <summary>
        /// Identifikation af den vurderingsejendom jf. Ejendomsstamregisteret, ESR, som det jordstykke som adressen ligger på, er en del af. Repræsenteret ved op til syv cifre. Eksempel ”13606”.
        /// </summary>
        
        [Column("esrejendomsnr", TypeName = "varchar(7)")]
        public virtual string Esrejendomsnr { get; set; }

        /// <summary>
        /// Adgangspunktets østlige koordiat angivet i koordinatsystemet UTM zone 32 og ved brug af det fælles europæiske terrestriale referencesystem EUREF89/ETRS89.
        /// </summary>
        
        [Column("etrs89koordinat_øst")]
        public virtual double? Etrs89koordinat_øst { get; set; }

        /// <summary>
        /// Adgangspunktets nordlige koordiat angivet i koordinatsystemet UTM zone 32 og ved brug af det fælles europæiske terrestriale referencesystem EUREF89/ETRS89.
        /// </summary>
        
        [Column("etrs89koordinat_nord")]
        public virtual double? Etrs89koordinat_nord { get; set; }

        /// <summary>
        /// Kode der angiver nøjagtigheden for adressepunktet. Et tegn. ”A” betyder at adressepunktet er absolut placeret på et detaljeret grundkort, typisk med en nøjagtighed bedre end +/- 2 meter. ”B” betyder at adressepunktet er beregnet – typisk på basis af matrikelkortet, således at adressen ligger midt på det pågældende matrikelnummer. I så fald kan nøjagtigheden være ringere en end +/- 100 meter afhængig af forholdene. ”U” betyder intet adressepunkt.
        /// </summary>
        
        [Column("nøjagtighed", TypeName = "varchar(1)")]
        [Required()]
        public virtual string Nøjagtighed { get; set; }

        /// <summary>
        /// Kode der angiver kilden til adressepunktet. Et tegn. ”1” = oprettet maskinelt fra teknisk kort; ”2” = Oprettet maskinelt fra af matrikelnummer tyngdepunkt; ”3” = Eksternt indberettet af konsulent på vegne af kommunen; ”4” = Eksternt indberettet af kommunes kortkontor o.l. ”5” = Oprettet af teknisk forvaltning."
        /// </summary>
        
        [Column("kilde")]
        public virtual int? Kilde { get; set; }

        /// <summary>
        /// Kode der angiver kilden til husnummeret. Et tal bestående af et ciffer.
        /// </summary>
        
        [Column("husnummerkilde")]
        public virtual int? Husnummerkilde { get; set; }

        /// <summary>
        /// Kode der angiver den specifikation adressepunktet skal opfylde. 2 tegn. ”TD” = 3 meter inde i bygningen ved det sted hvor indgangsdør e.l. skønnes placeret; ”TK” = Udtrykkelig TK-standard: 3 meter inde i bygning, midt for længste side mod vej; ”TN” Alm. teknisk standard: bygningstyngdepunkt eller blot i bygning; ”UF” = Uspecificeret/foreløbig: ikke nødvendigvis placeret i bygning."
        /// </summary>
        
        [Column("tekniskstandard", TypeName = "varchar(2)")]
        public virtual string Tekniskstandard { get; set; }

        /// <summary>
        /// Angiver en evt. retningsvinkel for adressen i ”gon” dvs. hvor hele cirklen er 400 gon og 200 er vandret. Værdier 0.00-400.00: Eksempel: ”128.34”.
        /// </summary>
        
        [Column("tekstretning")]
        public virtual double? Tekstretning { get; set; }

        /// <summary>
        /// Dato for sidste ændring i adressepunktet, som registreret af DAR. Eksempel: ”1998-11-17T00:00:00”
        /// </summary>
        
        [Column("adressepunktændringsdato")]
        public virtual DateTime? Adressepunktændringsdato { get; set; }

        /// <summary>
        /// Nøgle i ESDH system.
        /// </summary>
        
        [Column("esdhreference", TypeName = "varchar(1000)")]
        public virtual string Esdhreference { get; set; }

        /// <summary>
        /// Journalnummer.
        /// </summary>
        
        [Column("journalnummer", TypeName = "varchar(1000)")]
        public virtual string Journalnummer { get; set; }

        /// <summary>
        /// Højden (koten) er beregnet efter Dansk Vertikal Reference 1990 (DVR90) fra middelvandstanden i havene ved Danmarks kyster til terrænniveau.  Angivet i meter. Beregnet ud fra den danske højdemodel. Værdien -9999 angiver, at adressens adgangspunkt er udenfor højdemodellen, og derfor ikke kan beregnes.
        /// </summary>
        
        [Column("højde")]
        public virtual double? Højde { get; set; }

        /// <summary>
        /// Adgangspunktets unikke ID
        /// </summary>
        
        [Column("adgangspunktid")]
        public virtual Guid? Adgangspunktid { get; set; }

        /// <summary>
        /// DAGI ID på det supplerende bynavn, som adgangsadressen ligger i.
        /// </summary>
        
        [Column("supplerendebynavn_dagi_id", TypeName = "varchar(10)")]
        public virtual string Supplerendebynavn_dagi_id { get; set; }

        /// <summary>
        /// Vejpunktets unikke ID.
        /// </summary>
        
        [Column("vejpunkt_id")]
        public virtual Guid? Vejpunkt_id { get; set; }

        /// <summary>
        /// Den navngivne vejs unikke ID
        /// </summary>
        
        [Column("navngivenvej_id")]
        public virtual Guid? Navngivenvej_id { get; set; }

        /// <summary>Overwrite this method to do your own initialization of the entity.</summary>
        partial void OnCreated();

        /// Returns the primary key as a string (includes all columns).</summary>
        public override string DawaPkey
        {
            get
            {
                if (_dawaPkey == null)
                {
                    _dawaPkey = Id.ToString();
                }
                return _dawaPkey;
            }
        }

        [Column("entity_updated")]
        [Required()]
        /// <summary>Tidspunktet da rækken blev oprettet eller ændret i databasen hos JOI.</summary>
        public DateTime EntityUpdated { get; set; }

    }
}
