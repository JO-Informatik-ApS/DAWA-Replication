//-----------------------------------------------------------------------------------------------
// This is auto-generated code.
//-----------------------------------------------------------------------------------------------
// This code was generated by JO Informatik DAWA Replication tool version 1.0.2.0
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//-----------------------------------------------------------------------------------------------
using Microsoft.EntityFrameworkCore;
using System.CodeDom.Compiler;
using System.Configuration;

namespace JOInformatik.DawaReplication.DataAccess
{
    [GeneratedCode("JOI Dawa tool", "Ver 1.1")]
    public partial class DawaReplicationDBContextBase : DbContext
    {
        public DawaReplicationDBContextBase()
            : base()
        {
        }

        public DawaReplicationDBContextBase(DbContextOptions<DawaReplicationDBContextBase> options)
            : base(options)
        {
        }

        public DbSet<Adgangsadresse> Adgangsadresse { get; set; }

        public DbSet<Adresse> Adresse { get; set; }

        public DbSet<Afstemningsområde> Afstemningsområde { get; set; }

        public DbSet<Afstemningsområdetilknytning> Afstemningsområdetilknytning { get; set; }

        public DbSet<Brofasthed> Brofasthed { get; set; }

        public DbSet<Bygning> Bygning { get; set; }

        public DbSet<Bygningtilknytning> Bygningtilknytning { get; set; }

        public DbSet<Dagi_postnummer> Dagi_postnummer { get; set; }

        public DbSet<Ejerlav> Ejerlav { get; set; }

        public DbSet<Højde> Højde { get; set; }

        public DbSet<Ikke_brofast_husnummer> Ikke_brofast_husnummer { get; set; }

        public DbSet<Jordstykke> Jordstykke { get; set; }

        public DbSet<Jordstykketilknytning> Jordstykketilknytning { get; set; }

        public DbSet<Kommune> Kommune { get; set; }

        public DbSet<Kommunetilknytning> Kommunetilknytning { get; set; }

        public DbSet<Landpostnummer> Landpostnummer { get; set; }

        public DbSet<Menighedsrådsafstemningsområde> Menighedsrådsafstemningsområde { get; set; }

        public DbSet<Menighedsrådsafstemningsområdetilknytning> Menighedsrådsafstemningsområdetilknytning { get; set; }

        public DbSet<Navngivenvej> Navngivenvej { get; set; }

        public DbSet<Opstillingskreds> Opstillingskreds { get; set; }

        public DbSet<Opstillingskredstilknytning> Opstillingskredstilknytning { get; set; }

        public DbSet<Politikreds> Politikreds { get; set; }

        public DbSet<Politikredstilknytning> Politikredstilknytning { get; set; }

        public DbSet<Postnummer> Postnummer { get; set; }

        public DbSet<Postnummertilknytning> Postnummertilknytning { get; set; }

        public DbSet<Region> Region { get; set; }

        public DbSet<Regionstilknytning> Regionstilknytning { get; set; }

        public DbSet<Retskreds> Retskreds { get; set; }

        public DbSet<Retskredstilknytning> Retskredstilknytning { get; set; }

        public DbSet<Sogn> Sogn { get; set; }

        public DbSet<Sognetilknytning> Sognetilknytning { get; set; }

        public DbSet<Sted> Sted { get; set; }

        public DbSet<Stednavn> Stednavn { get; set; }

        public DbSet<Stednavntilknytning> Stednavntilknytning { get; set; }

        public DbSet<Stedtilknytning> Stedtilknytning { get; set; }

        public DbSet<Storkreds> Storkreds { get; set; }

        public DbSet<Storkredstilknytning> Storkredstilknytning { get; set; }

        public DbSet<Supplerendebynavn> Supplerendebynavn { get; set; }

        public DbSet<Supplerendebynavntilknytning> Supplerendebynavntilknytning { get; set; }

        public DbSet<Valglandsdel> Valglandsdel { get; set; }

        public DbSet<Valglandsdelstilknytning> Valglandsdelstilknytning { get; set; }

        public DbSet<Vask_adresse_historik> Vask_adresse_historik { get; set; }

        public DbSet<Vask_husnummer_historik> Vask_husnummer_historik { get; set; }

        public DbSet<Vejmidte> Vejmidte { get; set; }

        public DbSet<Vejpunkt> Vejpunkt { get; set; }

        public DbSet<Vejstykke> Vejstykke { get; set; }

        public DbSet<Vejstykkepostnummerrelation> Vejstykkepostnummerrelation { get; set; }

        public DbSet<Zone> Zone { get; set; }

        public DbSet<Zonetilknytning> Zonetilknytning { get; set; }

        public DbSet<Dar_adresse_aktuel> Dar_adresse_aktuel { get; set; }

        public DbSet<Dar_adresse_historik> Dar_adresse_historik { get; set; }

        public DbSet<Dar_adressepunkt_aktuel> Dar_adressepunkt_aktuel { get; set; }

        public DbSet<Dar_adressepunkt_historik> Dar_adressepunkt_historik { get; set; }

        public DbSet<Dar_darafstemningsområde_aktuel> Dar_darafstemningsområde_aktuel { get; set; }

        public DbSet<Dar_darafstemningsområde_historik> Dar_darafstemningsområde_historik { get; set; }

        public DbSet<Dar_darkommuneinddeling_aktuel> Dar_darkommuneinddeling_aktuel { get; set; }

        public DbSet<Dar_darkommuneinddeling_historik> Dar_darkommuneinddeling_historik { get; set; }

        public DbSet<Dar_darmenighedsrådsafstemningsområde_aktuel> Dar_darmenighedsrådsafstemningsområde_aktuel { get; set; }

        public DbSet<Dar_darmenighedsrådsafstemningsområde_historik> Dar_darmenighedsrådsafstemningsområde_historik { get; set; }

        public DbSet<Dar_darsogneinddeling_aktuel> Dar_darsogneinddeling_aktuel { get; set; }

        public DbSet<Dar_darsogneinddeling_historik> Dar_darsogneinddeling_historik { get; set; }

        public DbSet<Dar_husnummer_aktuel> Dar_husnummer_aktuel { get; set; }

        public DbSet<Dar_husnummer_historik> Dar_husnummer_historik { get; set; }

        public DbSet<Dar_navngivenvej_aktuel> Dar_navngivenvej_aktuel { get; set; }

        public DbSet<Dar_navngivenvej_historik> Dar_navngivenvej_historik { get; set; }

        public DbSet<Dar_navngivenvejkommunedel_aktuel> Dar_navngivenvejkommunedel_aktuel { get; set; }

        public DbSet<Dar_navngivenvejkommunedel_historik> Dar_navngivenvejkommunedel_historik { get; set; }

        public DbSet<Dar_navngivenvejpostnummerrelation_aktuel> Dar_navngivenvejpostnummerrelation_aktuel { get; set; }

        public DbSet<Dar_navngivenvejpostnummerrelation_historik> Dar_navngivenvejpostnummerrelation_historik { get; set; }

        public DbSet<Dar_navngivenvejsupplerendebynavnrelation_aktuel> Dar_navngivenvejsupplerendebynavnrelation_aktuel { get; set; }

        public DbSet<Dar_navngivenvejsupplerendebynavnrelation_historik> Dar_navngivenvejsupplerendebynavnrelation_historik { get; set; }

        public DbSet<Dar_postnummer_aktuel> Dar_postnummer_aktuel { get; set; }

        public DbSet<Dar_postnummer_historik> Dar_postnummer_historik { get; set; }

        public DbSet<Dar_reserveretvejnavn_aktuel> Dar_reserveretvejnavn_aktuel { get; set; }

        public DbSet<Dar_reserveretvejnavn_historik> Dar_reserveretvejnavn_historik { get; set; }

        public DbSet<Dar_supplerendebynavn_aktuel> Dar_supplerendebynavn_aktuel { get; set; }

        public DbSet<Dar_supplerendebynavn_historik> Dar_supplerendebynavn_historik { get; set; }

        public DbSet<Bbr_bygning> Bbr_bygning { get; set; }

        public DbSet<Bbr_bygning_aktuel> Bbr_bygning_aktuel { get; set; }

        public DbSet<Bbr_bygning_historik> Bbr_bygning_historik { get; set; }

        public DbSet<Bbr_bygningpåfremmedgrund> Bbr_bygningpåfremmedgrund { get; set; }

        public DbSet<Bbr_bygningpåfremmedgrund_aktuel> Bbr_bygningpåfremmedgrund_aktuel { get; set; }

        public DbSet<Bbr_bygningpåfremmedgrund_historik> Bbr_bygningpåfremmedgrund_historik { get; set; }

        public DbSet<Bbr_ejendomsrelation> Bbr_ejendomsrelation { get; set; }

        public DbSet<Bbr_ejendomsrelation_aktuel> Bbr_ejendomsrelation_aktuel { get; set; }

        public DbSet<Bbr_ejendomsrelation_historik> Bbr_ejendomsrelation_historik { get; set; }

        public DbSet<Bbr_enhed> Bbr_enhed { get; set; }

        public DbSet<Bbr_enhed_aktuel> Bbr_enhed_aktuel { get; set; }

        public DbSet<Bbr_enhed_historik> Bbr_enhed_historik { get; set; }

        public DbSet<Bbr_enhedejerlejlighed> Bbr_enhedejerlejlighed { get; set; }

        public DbSet<Bbr_enhedejerlejlighed_aktuel> Bbr_enhedejerlejlighed_aktuel { get; set; }

        public DbSet<Bbr_enhedejerlejlighed_historik> Bbr_enhedejerlejlighed_historik { get; set; }

        public DbSet<Bbr_etage> Bbr_etage { get; set; }

        public DbSet<Bbr_etage_aktuel> Bbr_etage_aktuel { get; set; }

        public DbSet<Bbr_etage_historik> Bbr_etage_historik { get; set; }

        public DbSet<Bbr_fordelingaffordelingsareal> Bbr_fordelingaffordelingsareal { get; set; }

        public DbSet<Bbr_fordelingaffordelingsareal_aktuel> Bbr_fordelingaffordelingsareal_aktuel { get; set; }

        public DbSet<Bbr_fordelingaffordelingsareal_historik> Bbr_fordelingaffordelingsareal_historik { get; set; }

        public DbSet<Bbr_fordelingsareal> Bbr_fordelingsareal { get; set; }

        public DbSet<Bbr_fordelingsareal_aktuel> Bbr_fordelingsareal_aktuel { get; set; }

        public DbSet<Bbr_fordelingsareal_historik> Bbr_fordelingsareal_historik { get; set; }

        public DbSet<Bbr_grund> Bbr_grund { get; set; }

        public DbSet<Bbr_grund_aktuel> Bbr_grund_aktuel { get; set; }

        public DbSet<Bbr_grund_historik> Bbr_grund_historik { get; set; }

        public DbSet<Bbr_grundjordstykke> Bbr_grundjordstykke { get; set; }

        public DbSet<Bbr_grundjordstykke_aktuel> Bbr_grundjordstykke_aktuel { get; set; }

        public DbSet<Bbr_grundjordstykke_historik> Bbr_grundjordstykke_historik { get; set; }

        public DbSet<Bbr_opgang> Bbr_opgang { get; set; }

        public DbSet<Bbr_opgang_aktuel> Bbr_opgang_aktuel { get; set; }

        public DbSet<Bbr_opgang_historik> Bbr_opgang_historik { get; set; }

        public DbSet<Bbr_tekniskanlæg> Bbr_tekniskanlæg { get; set; }

        public DbSet<Bbr_tekniskanlæg_aktuel> Bbr_tekniskanlæg_aktuel { get; set; }

        public DbSet<Bbr_tekniskanlæg_historik> Bbr_tekniskanlæg_historik { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Adgangsadresse>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Adresse>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Afstemningsområde>()
                .HasKey(c => new { c.Kommunekode, c.Nummer });
            modelBuilder.Entity<Afstemningsområdetilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Kommunekode, c.Afstemningsområdenummer });
            modelBuilder.Entity<Brofasthed>()
                .HasKey(c => new { c.Stedid });
            modelBuilder.Entity<Bygning>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bygningtilknytning>()
                .HasKey(c => new { c.Bygningid, c.Adgangsadresseid });
            modelBuilder.Entity<Dagi_postnummer>()
                .HasKey(c => new { c.Nr });
            modelBuilder.Entity<Ejerlav>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Højde>()
                .HasKey(c => new { c.Husnummerid });
            modelBuilder.Entity<Ikke_brofast_husnummer>()
                .HasKey(c => new { c.Husnummerid });
            modelBuilder.Entity<Jordstykke>()
                .HasKey(c => new { c.Ejerlavkode, c.Matrikelnr });
            modelBuilder.Entity<Jordstykketilknytning>()
                .HasKey(c => new { c.Ejerlavkode, c.Matrikelnr, c.Adgangsadresseid });
            modelBuilder.Entity<Kommune>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Kommunetilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Kommunekode });
            modelBuilder.Entity<Landpostnummer>()
                .HasKey(c => new { c.Nr });
            modelBuilder.Entity<Menighedsrådsafstemningsområde>()
                .HasKey(c => new { c.Kommunekode, c.Nummer });
            modelBuilder.Entity<Menighedsrådsafstemningsområdetilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Kommunekode, c.Menighedsrådsafstemningsområdenummer });
            modelBuilder.Entity<Navngivenvej>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Opstillingskreds>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Opstillingskredstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Opstillingskredskode });
            modelBuilder.Entity<Politikreds>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Politikredstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Politikredskode });
            modelBuilder.Entity<Postnummer>()
                .HasKey(c => new { c.Nr });
            modelBuilder.Entity<Postnummertilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Postnummer });
            modelBuilder.Entity<Region>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Regionstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Regionskode });
            modelBuilder.Entity<Retskreds>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Retskredstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Retskredskode });
            modelBuilder.Entity<Sogn>()
                .HasKey(c => new { c.Kode });
            modelBuilder.Entity<Sognetilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Sognekode });
            modelBuilder.Entity<Sted>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Stednavn>()
                .HasKey(c => new { c.Stedid, c.Navn });
            modelBuilder.Entity<Stednavntilknytning>()
                .HasKey(c => new { c.Stednavn_id, c.Adgangsadresse_id });
            modelBuilder.Entity<Stedtilknytning>()
                .HasKey(c => new { c.Stedid, c.Adgangsadresseid });
            modelBuilder.Entity<Storkreds>()
                .HasKey(c => new { c.Nummer });
            modelBuilder.Entity<Storkredstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Storkredsnummer });
            modelBuilder.Entity<Supplerendebynavn>()
                .HasKey(c => new { c.Dagi_id });
            modelBuilder.Entity<Supplerendebynavntilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Dagi_id });
            modelBuilder.Entity<Valglandsdel>()
                .HasKey(c => new { c.Bogstav });
            modelBuilder.Entity<Valglandsdelstilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Valglandsdelsbogstav });
            modelBuilder.Entity<Vask_adresse_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Vask_husnummer_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Vejmidte>()
                .HasKey(c => new { c.Kommunekode, c.Vejkode });
            modelBuilder.Entity<Vejpunkt>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Vejstykke>()
                .HasKey(c => new { c.Kommunekode, c.Kode });
            modelBuilder.Entity<Vejstykkepostnummerrelation>()
                .HasKey(c => new { c.Kommunekode, c.Vejkode, c.Postnr });
            modelBuilder.Entity<Zone>()
                .HasKey(c => new { c.Zone_ });
            modelBuilder.Entity<Zonetilknytning>()
                .HasKey(c => new { c.Adgangsadresseid, c.Zone });
            modelBuilder.Entity<Dar_adresse_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_adresse_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_adressepunkt_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_adressepunkt_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_darafstemningsområde_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_darafstemningsområde_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_darkommuneinddeling_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_darkommuneinddeling_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_darmenighedsrådsafstemningsområde_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_darmenighedsrådsafstemningsområde_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_darsogneinddeling_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_darsogneinddeling_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_husnummer_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_husnummer_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_navngivenvej_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_navngivenvej_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_navngivenvejkommunedel_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_navngivenvejkommunedel_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_navngivenvejpostnummerrelation_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_navngivenvejpostnummerrelation_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_navngivenvejsupplerendebynavnrelation_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_navngivenvejsupplerendebynavnrelation_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_postnummer_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_postnummer_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_reserveretvejnavn_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_reserveretvejnavn_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Dar_supplerendebynavn_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Dar_supplerendebynavn_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_bygning>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_bygning_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_bygning_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_bygningpåfremmedgrund>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_bygningpåfremmedgrund_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_bygningpåfremmedgrund_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_ejendomsrelation>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_ejendomsrelation_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_ejendomsrelation_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_enhed>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_enhed_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_enhed_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_enhedejerlejlighed>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_enhedejerlejlighed_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_enhedejerlejlighed_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_etage>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_etage_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_etage_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_fordelingaffordelingsareal>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_fordelingaffordelingsareal_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_fordelingaffordelingsareal_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_fordelingsareal>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_fordelingsareal_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_fordelingsareal_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_grund>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_grund_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_grund_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_grundjordstykke>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_grundjordstykke_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_grundjordstykke_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_opgang>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_opgang_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_opgang_historik>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_tekniskanlæg>()
                .HasKey(c => new { c.Rowkey });
            modelBuilder.Entity<Bbr_tekniskanlæg_aktuel>()
                .HasKey(c => new { c.Id });
            modelBuilder.Entity<Bbr_tekniskanlæg_historik>()
                .HasKey(c => new { c.Rowkey });

            OnModelCreatingAddStuff(modelBuilder);
        }

        /// <summary>Overwrite this method to do add extra stuff when the model is created.</summary>
        partial void OnModelCreatingAddStuff(ModelBuilder modelBuilder);

    }
}
