//-----------------------------------------------------------------------------------------------
// This is auto-generated code.
//-----------------------------------------------------------------------------------------------
// This code was generated by JO Informatik DAWA Replication tool version 1.0.2.0
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//-----------------------------------------------------------------------------------------------
using Microsoft.SqlServer.Types;
using Newtonsoft.Json;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace JOInformatik.DawaReplication.DataAccess
{
    /// <summary>TODO.</summary>
    [GeneratedCode("JO Informatik DAWA Replication tool", "version 1.0.2.0")]
    [Table("bygning")]
    public partial class Bygning : ReplicationBase
    {
        /// <summary>This constructor calls OnCreated().</summary>
        public Bygning()
        {
            EntityUpdated = DateTime.Now;
            OnCreated();
        }

        /// <summary>
        /// DETTE ER PKEY. Bygningspolygonets unikke ID. Heltal.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None), Column("id", TypeName = "varchar(10)")]
        [Required()]
        public virtual string Id { get; set; }

        /// <summary>
        /// Angiver bygningens type, eksempelvis "Bygning", "Drivhus", "Tank/Silo".
        /// </summary>
        
        [Column("bygningstype", TypeName = "varchar(40)")]
        [Required()]
        public virtual string Bygningstype { get; set; }

        /// <summary>
        /// Angiver hvor Z-koordinaten er registreret. Fotogrammetrisk anvendes altid "Tag". 
        /// Dog kan "3D-Tag" anvendes, hvis det eksplicit er aftalt i forbindelse med 3D-bygningsmodellering.
        /// Anvendelse af ”Under terræn” muliggør registrering af en underjordisk bygning.
        /// Mulige værdier: 3D-Tag, Tag, Terræn, Under terræn, Ikke tildelt, Ukendt.
        /// </summary>
        
        [Column("metode3d", TypeName = "varchar(20)")]
        [Required()]
        public virtual string Metode3d { get; set; }

        /// <summary>
        /// Angiver målestedet for bygningspolygonet. Mulige værdier: "Tag", "Væg", "Tag og Væg", "Ukendt", "Ikke Tildelt".
        /// </summary>
        
        [Column("målested", TypeName = "varchar(20)")]
        [Required()]
        public virtual string Målested { get; set; }

        /// <summary>
        /// Angiver bygningens ID i Bygnings- og Boligregisteret (BBR). UUID.
        /// </summary>
        
        [Column("bbrbygning_id")]
        public virtual Guid? Bbrbygning_id { get; set; }

        /// <summary>
        /// Angiver, om en Bygning er synlig i et ortofoto. At den ikke er synlig skyldes, 
        /// at et andet GeoDanmark objekt skjuler den helt eller delvist eller at den ligger helt eller 
        /// delvist under jorden.
        /// "false"= Bygning er helt eller delvist usynlig i et ortofoto.
        /// "true"= Bygning er synlig i et ortofoto.
        /// 
        /// </summary>
        
        [Column("synlig")]
        [Required()]
        public virtual bool Synlig { get; set; }

        /// <summary>
        /// Angiver, om en Bygning overlappes helt eller delvist af en anden Bygning.
        /// "false"= Bygning er ikke helt eller delvist overlappet af en anden Bygning.
        /// "true"= Bygning er helt eller delvist overlappet af en anden Bygning.
        /// 
        /// </summary>
        
        [Column("overlap")]
        [Required()]
        public virtual bool Overlap { get; set; }

        /// <summary>
        /// Bygningens geometri. Leveres som GeoJSON polygon.
        /// </summary>
        
        [Column("geometri")]
        [Required()]
        [JsonConverter(typeof(SqlGeometryConverter))]
        public virtual SqlGeometry Geometri { get; set; }

        /// <summary>Overwrite this method to do your own initialization of the entity.</summary>
        partial void OnCreated();

        /// Returns the primary key as a string (includes all columns).</summary>
        public override string DawaPkey
        {
            get
            {
                if (_dawaPkey == null)
                {
                    _dawaPkey = Id.ToString();
                }
                return _dawaPkey;
            }
        }

        [Column("entity_updated")]
        [Required()]
        /// <summary>Tidspunktet da rækken blev oprettet eller ændret i databasen hos JOI.</summary>
        public DateTime EntityUpdated { get; set; }

    }
}
